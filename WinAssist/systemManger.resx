<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>